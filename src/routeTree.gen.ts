/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as PlansRouteImport } from './routes/plans'
import { Route as LogsRouteImport } from './routes/logs'
import { Route as AddPlanRouteImport } from './routes/add-plan'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PlanDetailsPlanIdRouteImport } from './routes/plan-details/$planId'
import { Route as EditPlansPlanIdRouteImport } from './routes/edit-plans/$planId'
import { Route as EditLogSessionIdRouteImport } from './routes/edit-log/$sessionId'
import { Route as AddLogExerciseIdRouteImport } from './routes/add-log/$exerciseId'

const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const PlansRoute = PlansRouteImport.update({
  id: '/plans',
  path: '/plans',
  getParentRoute: () => rootRouteImport,
} as any)
const LogsRoute = LogsRouteImport.update({
  id: '/logs',
  path: '/logs',
  getParentRoute: () => rootRouteImport,
} as any)
const AddPlanRoute = AddPlanRouteImport.update({
  id: '/add-plan',
  path: '/add-plan',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PlanDetailsPlanIdRoute = PlanDetailsPlanIdRouteImport.update({
  id: '/plan-details/$planId',
  path: '/plan-details/$planId',
  getParentRoute: () => rootRouteImport,
} as any)
const EditPlansPlanIdRoute = EditPlansPlanIdRouteImport.update({
  id: '/edit-plans/$planId',
  path: '/edit-plans/$planId',
  getParentRoute: () => rootRouteImport,
} as any)
const EditLogSessionIdRoute = EditLogSessionIdRouteImport.update({
  id: '/edit-log/$sessionId',
  path: '/edit-log/$sessionId',
  getParentRoute: () => rootRouteImport,
} as any)
const AddLogExerciseIdRoute = AddLogExerciseIdRouteImport.update({
  id: '/add-log/$exerciseId',
  path: '/add-log/$exerciseId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/add-plan': typeof AddPlanRoute
  '/logs': typeof LogsRoute
  '/plans': typeof PlansRoute
  '/settings': typeof SettingsRoute
  '/add-log/$exerciseId': typeof AddLogExerciseIdRoute
  '/edit-log/$sessionId': typeof EditLogSessionIdRoute
  '/edit-plans/$planId': typeof EditPlansPlanIdRoute
  '/plan-details/$planId': typeof PlanDetailsPlanIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/add-plan': typeof AddPlanRoute
  '/logs': typeof LogsRoute
  '/plans': typeof PlansRoute
  '/settings': typeof SettingsRoute
  '/add-log/$exerciseId': typeof AddLogExerciseIdRoute
  '/edit-log/$sessionId': typeof EditLogSessionIdRoute
  '/edit-plans/$planId': typeof EditPlansPlanIdRoute
  '/plan-details/$planId': typeof PlanDetailsPlanIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/add-plan': typeof AddPlanRoute
  '/logs': typeof LogsRoute
  '/plans': typeof PlansRoute
  '/settings': typeof SettingsRoute
  '/add-log/$exerciseId': typeof AddLogExerciseIdRoute
  '/edit-log/$sessionId': typeof EditLogSessionIdRoute
  '/edit-plans/$planId': typeof EditPlansPlanIdRoute
  '/plan-details/$planId': typeof PlanDetailsPlanIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/add-plan'
    | '/logs'
    | '/plans'
    | '/settings'
    | '/add-log/$exerciseId'
    | '/edit-log/$sessionId'
    | '/edit-plans/$planId'
    | '/plan-details/$planId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/add-plan'
    | '/logs'
    | '/plans'
    | '/settings'
    | '/add-log/$exerciseId'
    | '/edit-log/$sessionId'
    | '/edit-plans/$planId'
    | '/plan-details/$planId'
  id:
    | '__root__'
    | '/'
    | '/add-plan'
    | '/logs'
    | '/plans'
    | '/settings'
    | '/add-log/$exerciseId'
    | '/edit-log/$sessionId'
    | '/edit-plans/$planId'
    | '/plan-details/$planId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AddPlanRoute: typeof AddPlanRoute
  LogsRoute: typeof LogsRoute
  PlansRoute: typeof PlansRoute
  SettingsRoute: typeof SettingsRoute
  AddLogExerciseIdRoute: typeof AddLogExerciseIdRoute
  EditLogSessionIdRoute: typeof EditLogSessionIdRoute
  EditPlansPlanIdRoute: typeof EditPlansPlanIdRoute
  PlanDetailsPlanIdRoute: typeof PlanDetailsPlanIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/plans': {
      id: '/plans'
      path: '/plans'
      fullPath: '/plans'
      preLoaderRoute: typeof PlansRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/logs': {
      id: '/logs'
      path: '/logs'
      fullPath: '/logs'
      preLoaderRoute: typeof LogsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/add-plan': {
      id: '/add-plan'
      path: '/add-plan'
      fullPath: '/add-plan'
      preLoaderRoute: typeof AddPlanRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/plan-details/$planId': {
      id: '/plan-details/$planId'
      path: '/plan-details/$planId'
      fullPath: '/plan-details/$planId'
      preLoaderRoute: typeof PlanDetailsPlanIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/edit-plans/$planId': {
      id: '/edit-plans/$planId'
      path: '/edit-plans/$planId'
      fullPath: '/edit-plans/$planId'
      preLoaderRoute: typeof EditPlansPlanIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/edit-log/$sessionId': {
      id: '/edit-log/$sessionId'
      path: '/edit-log/$sessionId'
      fullPath: '/edit-log/$sessionId'
      preLoaderRoute: typeof EditLogSessionIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/add-log/$exerciseId': {
      id: '/add-log/$exerciseId'
      path: '/add-log/$exerciseId'
      fullPath: '/add-log/$exerciseId'
      preLoaderRoute: typeof AddLogExerciseIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AddPlanRoute: AddPlanRoute,
  LogsRoute: LogsRoute,
  PlansRoute: PlansRoute,
  SettingsRoute: SettingsRoute,
  AddLogExerciseIdRoute: AddLogExerciseIdRoute,
  EditLogSessionIdRoute: EditLogSessionIdRoute,
  EditPlansPlanIdRoute: EditPlansPlanIdRoute,
  PlanDetailsPlanIdRoute: PlanDetailsPlanIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
